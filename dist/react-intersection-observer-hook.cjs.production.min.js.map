{"version":3,"file":"react-intersection-observer-hook.cjs.production.min.js","sources":["../src/useIntersectionObserver.ts","../src/useTrackVisibility.ts"],"sourcesContent":["import { useState, useCallback, useEffect, useRef } from 'react';\nimport { Omit } from './types';\n\nconst DEFAULT_ROOT_MARGIN = '0px';\nconst DEFAULT_THRESHOLD = [0];\n\nexport type IntersectionObserverHookArgs = Omit<\n  IntersectionObserverInit,\n  'root'\n>;\n\nexport type IntersectionObserverHookRefCallbackNode = Element | null;\n\nexport type IntersectionObserverHookRefCallback = (\n  node: IntersectionObserverHookRefCallbackNode,\n) => void;\n\nexport type IntersectionObserverHookRootRefCallbackNode = IntersectionObserverInit['root'];\n\nexport type IntersectionObserverHookRootRefCallback = (\n  node: IntersectionObserverHookRootRefCallbackNode,\n) => void;\n\nexport type IntersectionObserverHookResult = [\n  IntersectionObserverHookRefCallback,\n  {\n    entry: IntersectionObserverEntry | undefined;\n    rootRef: IntersectionObserverHookRootRefCallback;\n  },\n];\n\n// For more info:\n// https://developers.google.com/web/updates/2016/04/intersectionobserver\n// https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\nfunction useIntersectionObserver(\n  args?: IntersectionObserverHookArgs,\n): IntersectionObserverHookResult {\n  const rootMargin = args?.rootMargin ?? DEFAULT_ROOT_MARGIN;\n  const threshold = args?.threshold ?? DEFAULT_THRESHOLD;\n\n  const nodeRef = useRef<IntersectionObserverHookRefCallbackNode>(null);\n  const rootRef = useRef<IntersectionObserverHookRootRefCallbackNode>(null);\n  const observerRef = useRef<IntersectionObserver | null>(null);\n\n  const [entry, setEntry] = useState<IntersectionObserverEntry>();\n\n  const unobserve = useCallback(() => {\n    // Disconnect the current observer (if there is one)\n    const currentObserver = observerRef.current;\n    currentObserver?.disconnect();\n    observerRef.current = null;\n  }, []);\n\n  const observe = useCallback(() => {\n    try {\n      const node = nodeRef.current;\n      if (node) {\n        const root = rootRef.current;\n        const options = { root, rootMargin, threshold };\n        // Create a observer for current \"node\" with given options.\n        const observer = new IntersectionObserver(([newEntry]) => {\n          setEntry(newEntry);\n        }, options);\n        observer.observe(node);\n        observerRef.current = observer;\n      }\n    } catch (exception) {\n      console.log(exception);\n    }\n  }, [rootMargin, threshold]);\n\n  const initializeObserver = useCallback(() => {\n    unobserve();\n    observe();\n  }, [observe, unobserve]);\n\n  const refCallback = useCallback<IntersectionObserverHookRefCallback>(\n    (node) => {\n      nodeRef.current = node;\n      initializeObserver();\n    },\n    [initializeObserver],\n  );\n\n  const rootRefCallback = useCallback<IntersectionObserverHookRootRefCallback>(\n    (rootNode) => {\n      rootRef.current = rootNode;\n      initializeObserver();\n    },\n    [initializeObserver],\n  );\n\n  useEffect(() => {\n    // After React 18, StrictMode unmounts and mounts components to be sure\n    // if they are resilient effects being mounted and destroyed multiple times.\n    // This a behavior to be sure nothing breaks when off-screen components\n    // can preserve their state with future React versions.\n    // So in StrictMode, React unmounts the component, clean-up of this useEffect gets triggered and\n    // we stop observing the node. But we need to start observing after component re-mounts with its preserved state.\n    // So to handle this case, we call initializeObserver here.\n    // https://reactjs.org/blog/2022/03/08/react-18-upgrade-guide.html#updates-to-strict-mode\n    initializeObserver();\n    return () => {\n      // We disconnect the observer on unmount to prevent memory leaks etc.\n      unobserve();\n    };\n  }, [initializeObserver, unobserve]);\n\n  return [refCallback, { entry, rootRef: rootRefCallback }];\n}\n\nexport default useIntersectionObserver;\n","import { useState } from 'react';\nimport useIntersectionObserver, {\n  IntersectionObserverHookArgs,\n  IntersectionObserverHookResult,\n} from './useIntersectionObserver';\n\nexport type TrackVisibilityHookArgs = IntersectionObserverHookArgs;\n\nexport type TrackVisibilityHookResult = [\n  IntersectionObserverHookResult[0],\n  IntersectionObserverHookResult[1] & {\n    isVisible: boolean;\n    wasEverVisible: boolean;\n  },\n];\n\nfunction useTrackVisibility(\n  args?: IntersectionObserverHookArgs,\n): TrackVisibilityHookResult {\n  const [ref, result] = useIntersectionObserver(args);\n  const isVisible = Boolean(result.entry?.isIntersecting);\n  const [wasEverVisible, setWasEverVisible] = useState(isVisible);\n\n  if (isVisible && !wasEverVisible) {\n    setWasEverVisible(true);\n  }\n\n  return [ref, { ...result, isVisible, wasEverVisible }];\n}\n\nexport default useTrackVisibility;\n"],"names":["DEFAULT_THRESHOLD","useIntersectionObserver","args","rootMargin","threshold","nodeRef","useRef","rootRef","observerRef","useState","entry","setEntry","unobserve","useCallback","currentObserver","current","disconnect","observe","node","observer","IntersectionObserver","root","exception","console","log","initializeObserver","refCallback","rootRefCallback","rootNode","useEffect","ref","result","isVisible","Boolean","_result$entry","isIntersecting","wasEverVisible","setWasEverVisible"],"mappings":"2FAIMA,EAAoB,CAAC,GA8B3B,SAASC,EACPC,WAEMC,iBAAaD,SAAAA,EAAMC,cAlCC,MAmCpBC,iBAAYF,SAAAA,EAAME,aAAaJ,EAE/BK,EAAUC,SAAgD,MAC1DC,EAAUD,SAAoD,MAC9DE,EAAcF,SAAoC,QAE9BG,aAAnBC,OAAOC,OAERC,EAAYC,eAAY,eAEtBC,EAAkBN,EAAYO,cACpCD,GAAAA,EAAiBE,aACjBR,EAAYO,QAAU,OACrB,IAEGE,EAAUJ,eAAY,mBAElBK,EAAOb,EAAQU,WACjBG,EAAM,KAIFC,EAAW,IAAIC,sBAAqB,YACxCT,UAHc,CAAEU,KADLd,EAAQQ,QACGZ,WAAAA,EAAYC,UAAAA,IAKpCe,EAASF,QAAQC,GACjBV,EAAYO,QAAUI,GAExB,MAAOG,GACPC,QAAQC,IAAIF,MAEb,CAACnB,EAAYC,IAEVqB,EAAqBZ,eAAY,WACrCD,IACAK,MACC,CAACA,EAASL,IAEPc,EAAcb,eAClB,SAACK,GACCb,EAAQU,QAAUG,EAClBO,MAEF,CAACA,IAGGE,EAAkBd,eACtB,SAACe,GACCrB,EAAQQ,QAAUa,EAClBH,MAEF,CAACA,WAGHI,aAAU,kBASRJ,IACO,WAELb,OAED,CAACa,EAAoBb,IAEjB,CAACc,EAAa,CAAEhB,MAAAA,EAAOH,QAASoB,gRC5FzC,SACEzB,WAEsBD,EAAwBC,GAAvC4B,OAAKC,OACNC,EAAYC,iBAAQF,EAAOrB,cAAPwB,EAAcC,kBACI1B,WAASuB,GAA9CI,cAEHJ,IAAcI,IAChBC,SAAkB,GAGb,CAACP,OAAUC,GAAQC,UAAAA,EAAWI,eAAAA"}