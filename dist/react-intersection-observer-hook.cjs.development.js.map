{"version":3,"file":"react-intersection-observer-hook.cjs.development.js","sources":["../src/useIntersectionObserver.ts","../src/useTrackVisibility.ts"],"sourcesContent":["import { useState, useCallback, useEffect, useRef } from 'react';\nimport { Omit } from './types';\n\nconst DEFAULT_ROOT_MARGIN = '0px';\nconst DEFAULT_THRESHOLD = [0];\n\nexport type IntersectionObserverHookArgs = Omit<\n  IntersectionObserverInit,\n  'root'\n>;\n\nexport type IntersectionObserverHookRefCallbackNode = Element | null;\n\nexport type IntersectionObserverHookRefCallback = (\n  node: IntersectionObserverHookRefCallbackNode,\n) => void;\n\nexport type IntersectionObserverHookRootRefCallbackNode = IntersectionObserverInit['root'];\n\nexport type IntersectionObserverHookRootRefCallback = (\n  node: IntersectionObserverHookRootRefCallbackNode,\n) => void;\n\nexport type IntersectionObserverHookResult = [\n  IntersectionObserverHookRefCallback,\n  {\n    entry: IntersectionObserverEntry | undefined;\n    rootRef: IntersectionObserverHookRootRefCallback;\n  },\n];\n\n// For more info:\n// https://developers.google.com/web/updates/2016/04/intersectionobserver\n// https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\nfunction useIntersectionObserver(\n  args?: IntersectionObserverHookArgs,\n): IntersectionObserverHookResult {\n  const rootMargin = args?.rootMargin ?? DEFAULT_ROOT_MARGIN;\n  const threshold = args?.threshold ?? DEFAULT_THRESHOLD;\n\n  const nodeRef = useRef<IntersectionObserverHookRefCallbackNode>(null);\n  const rootRef = useRef<IntersectionObserverHookRootRefCallbackNode>(null);\n  const observerRef = useRef<IntersectionObserver | null>(null);\n\n  const [entry, setEntry] = useState<IntersectionObserverEntry>();\n\n  const unobserve = useCallback(() => {\n    // Disconnect the current observer (if there is one)\n    const currentObserver = observerRef.current;\n    currentObserver?.disconnect();\n    observerRef.current = null;\n  }, []);\n\n  const observe = useCallback(() => {\n    try {\n      const node = nodeRef.current;\n      if (node) {\n        const root = rootRef.current;\n        const options = { root, rootMargin, threshold };\n        // Create a observer for current \"node\" with given options.\n        const observer = new IntersectionObserver(([newEntry]) => {\n          setEntry(newEntry);\n        }, options);\n        observer.observe(node);\n        observerRef.current = observer;\n      }\n    } catch (exception) {\n      console.log(exception);\n    }\n  }, [rootMargin, threshold]);\n\n  const initializeObserver = useCallback(() => {\n    unobserve();\n    observe();\n  }, [observe, unobserve]);\n\n  const refCallback = useCallback<IntersectionObserverHookRefCallback>(\n    (node) => {\n      nodeRef.current = node;\n      initializeObserver();\n    },\n    [initializeObserver],\n  );\n\n  const rootRefCallback = useCallback<IntersectionObserverHookRootRefCallback>(\n    (rootNode) => {\n      rootRef.current = rootNode;\n      initializeObserver();\n    },\n    [initializeObserver],\n  );\n\n  useEffect(() => {\n    // After React 18, StrictMode unmounts and mounts components to be sure\n    // if they are resilient effects being mounted and destroyed multiple times.\n    // This a behavior to be sure nothing breaks when off-screen components\n    // can preserve their state with future React versions.\n    // So in StrictMode, React unmounts the component, clean-up of this useEffect gets triggered and\n    // we stop observing the node. But we need to start observing after component re-mounts with its preserved state.\n    // So to handle this case, we call initializeObserver here.\n    // https://reactjs.org/blog/2022/03/08/react-18-upgrade-guide.html#updates-to-strict-mode\n    initializeObserver();\n    return () => {\n      // We disconnect the observer on unmount to prevent memory leaks etc.\n      unobserve();\n    };\n  }, [initializeObserver, unobserve]);\n\n  return [refCallback, { entry, rootRef: rootRefCallback }];\n}\n\nexport default useIntersectionObserver;\n","import { useState } from 'react';\nimport useIntersectionObserver, {\n  IntersectionObserverHookArgs,\n  IntersectionObserverHookResult,\n} from './useIntersectionObserver';\n\nexport type TrackVisibilityHookArgs = IntersectionObserverHookArgs;\n\nexport type TrackVisibilityHookResult = [\n  IntersectionObserverHookResult[0],\n  IntersectionObserverHookResult[1] & {\n    isVisible: boolean;\n    wasEverVisible: boolean;\n  },\n];\n\nfunction useTrackVisibility(\n  args?: IntersectionObserverHookArgs,\n): TrackVisibilityHookResult {\n  const [ref, result] = useIntersectionObserver(args);\n  const isVisible = Boolean(result.entry?.isIntersecting);\n  const [wasEverVisible, setWasEverVisible] = useState(isVisible);\n\n  if (isVisible && !wasEverVisible) {\n    setWasEverVisible(true);\n  }\n\n  return [ref, { ...result, isVisible, wasEverVisible }];\n}\n\nexport default useTrackVisibility;\n"],"names":["DEFAULT_ROOT_MARGIN","DEFAULT_THRESHOLD","useIntersectionObserver","args","rootMargin","threshold","nodeRef","useRef","rootRef","observerRef","useState","entry","setEntry","unobserve","useCallback","currentObserver","current","disconnect","observe","node","root","options","observer","IntersectionObserver","newEntry","exception","console","log","initializeObserver","refCallback","rootRefCallback","rootNode","useEffect","useTrackVisibility","ref","result","isVisible","Boolean","isIntersecting","wasEverVisible","setWasEverVisible"],"mappings":"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"}